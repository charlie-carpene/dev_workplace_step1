exit
csv[1][0]
csv[1][4]
csv[0][5]
csv[0][4]
csv[0][3]
csv[0][2]
csv[0][1]
csv[0][0]
csv = parser.parse(inv_f, true)
parser.parse(inv_f, true).inspect
parser.parse(inv_f, true)
inv_f = parser.invert_semicolon_and_comma(f)
f = parser.read_file("assets/embassy.csv")
parser.read_file("assets/embassy.csv")
exit
parser.parse(p, true)
p = parser.invert_semicolon_and_comma("assets/embassy.csv")
parser.invert_semicolon_and_comma("assets/embassy.csv")
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
parser.replace_semicolon_to_comma("assets/embassy.csv")
exit
gsub_file(File.read("assets/embassy.csv"), ';', " ")
gsub_file(f, ';', " ")
gsub_file(f, ";", " ")
f
File.read("assets/embassy.csv").gsub(;, ' ')
f
File.read("assets/embassy.csv").gsub(/;/, ' ')
f.gsub(/;/, ",")
f.gsub(/;/) {|s| s = ","}
f
f.inspect
f.class
f
f = File.read("assets/embassy.csv")
f
f.replace(';') = "test"
f.replace(';')
f = File.read("assets/embassy.csv")
f
f["France"] = "cooucou"
f[";"] = "cooucou"
f.class
f = File.read("assets/embassy.csv")
File.read("assets/embassy.csv")
File.read("assets/embassy.csv")[;] = ','
File.read("assets/embassy.csv")[';'] = ','
File.read("assets/embassy.csv")[";"] = ","
exit
File.read("assets/countries.csv").delete('"')
File.read("assets/countries.csv").delete(""")
File.read("assets/countries.csv").delete """
File.read("assets/embassy.csv")
File.read("assets/countries.csv")
p[0][0]
p = parser.parse("assets/countries.csv")
p = parser.parse("assets/countries.cvs")
exit
p[1][0]
p[0][2]
p[0][1]
p[0][0]
p.inspect
p = parser.parse("assets/embassy.csv")
exit
test[1][5]
test[1][4]
test[1][3]
test[1][2]
test[1][1]
test[2][0]
test[0][0]
test[1][2]
test[1][0]
test[1][1]
test.inspect
test = parser.parse("assets/embassy.csv")
